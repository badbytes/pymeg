# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""

This module provide the all functions and datatypes implemented
in the low-level C library libniftiio and the NIfTI-1 header.

At the moment no additional documentation is provided here. Please see the
intensively documented source code of the nifti C libs to learn about the
capabilities of the library.

"""

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _clib.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_clib', [dirname(__file__)])
        except ImportError:
            import _clib
            return _clib
        if fp is not None:
            try:
                print('_clib', fp, pathname, description)
                _mod = imp.load_module('_clib', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _clib = swig_import_helper()
    del swig_import_helper
else:
    import _clib
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr



def nifti_mat44_to_quatern(*args):
  return _clib.nifti_mat44_to_quatern(*args)
nifti_mat44_to_quatern = _clib.nifti_mat44_to_quatern

def nifti_mat44_to_orientation(*args):
  return _clib.nifti_mat44_to_orientation(*args)
nifti_mat44_to_orientation = _clib.nifti_mat44_to_orientation
class znzptr(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    withz = _swig_property(_clib.znzptr_withz_get, _clib.znzptr_withz_set)
    nzfptr = _swig_property(_clib.znzptr_nzfptr_get, _clib.znzptr_nzfptr_set)
    def __init__(self): 
        _clib.znzptr_swiginit(self,_clib.new_znzptr())
    __swig_destroy__ = _clib.delete_znzptr
znzptr_swigregister = _clib.znzptr_swigregister
znzptr_swigregister(znzptr)


def znzopen(*args):
  return _clib.znzopen(*args)
znzopen = _clib.znzopen

def znzdopen(*args):
  return _clib.znzdopen(*args)
znzdopen = _clib.znzdopen

def Xznzclose(*args):
  return _clib.Xznzclose(*args)
Xznzclose = _clib.Xznzclose

def znzread(*args):
  return _clib.znzread(*args)
znzread = _clib.znzread

def znzwrite(*args):
  return _clib.znzwrite(*args)
znzwrite = _clib.znzwrite

def znzseek(*args):
  return _clib.znzseek(*args)
znzseek = _clib.znzseek

def znzrewind(*args):
  return _clib.znzrewind(*args)
znzrewind = _clib.znzrewind

def znztell(*args):
  return _clib.znztell(*args)
znztell = _clib.znztell

def znzputs(*args):
  return _clib.znzputs(*args)
znzputs = _clib.znzputs

def znzgets(*args):
  return _clib.znzgets(*args)
znzgets = _clib.znzgets

def znzputc(*args):
  return _clib.znzputc(*args)
znzputc = _clib.znzputc

def znzgetc(*args):
  return _clib.znzgetc(*args)
znzgetc = _clib.znzgetc

def znzprintf(*args):
  return _clib.znzprintf(*args)
znzprintf = _clib.znzprintf
class nifti_1_header(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    sizeof_hdr = _swig_property(_clib.nifti_1_header_sizeof_hdr_get, _clib.nifti_1_header_sizeof_hdr_set)
    data_type = _swig_property(_clib.nifti_1_header_data_type_get, _clib.nifti_1_header_data_type_set)
    db_name = _swig_property(_clib.nifti_1_header_db_name_get, _clib.nifti_1_header_db_name_set)
    extents = _swig_property(_clib.nifti_1_header_extents_get, _clib.nifti_1_header_extents_set)
    session_error = _swig_property(_clib.nifti_1_header_session_error_get, _clib.nifti_1_header_session_error_set)
    regular = _swig_property(_clib.nifti_1_header_regular_get, _clib.nifti_1_header_regular_set)
    dim_info = _swig_property(_clib.nifti_1_header_dim_info_get, _clib.nifti_1_header_dim_info_set)
    dim = _swig_property(_clib.nifti_1_header_dim_get, _clib.nifti_1_header_dim_set)
    intent_p1 = _swig_property(_clib.nifti_1_header_intent_p1_get, _clib.nifti_1_header_intent_p1_set)
    intent_p2 = _swig_property(_clib.nifti_1_header_intent_p2_get, _clib.nifti_1_header_intent_p2_set)
    intent_p3 = _swig_property(_clib.nifti_1_header_intent_p3_get, _clib.nifti_1_header_intent_p3_set)
    intent_code = _swig_property(_clib.nifti_1_header_intent_code_get, _clib.nifti_1_header_intent_code_set)
    datatype = _swig_property(_clib.nifti_1_header_datatype_get, _clib.nifti_1_header_datatype_set)
    bitpix = _swig_property(_clib.nifti_1_header_bitpix_get, _clib.nifti_1_header_bitpix_set)
    slice_start = _swig_property(_clib.nifti_1_header_slice_start_get, _clib.nifti_1_header_slice_start_set)
    pixdim = _swig_property(_clib.nifti_1_header_pixdim_get, _clib.nifti_1_header_pixdim_set)
    vox_offset = _swig_property(_clib.nifti_1_header_vox_offset_get, _clib.nifti_1_header_vox_offset_set)
    scl_slope = _swig_property(_clib.nifti_1_header_scl_slope_get, _clib.nifti_1_header_scl_slope_set)
    scl_inter = _swig_property(_clib.nifti_1_header_scl_inter_get, _clib.nifti_1_header_scl_inter_set)
    slice_end = _swig_property(_clib.nifti_1_header_slice_end_get, _clib.nifti_1_header_slice_end_set)
    slice_code = _swig_property(_clib.nifti_1_header_slice_code_get, _clib.nifti_1_header_slice_code_set)
    xyzt_units = _swig_property(_clib.nifti_1_header_xyzt_units_get, _clib.nifti_1_header_xyzt_units_set)
    cal_max = _swig_property(_clib.nifti_1_header_cal_max_get, _clib.nifti_1_header_cal_max_set)
    cal_min = _swig_property(_clib.nifti_1_header_cal_min_get, _clib.nifti_1_header_cal_min_set)
    slice_duration = _swig_property(_clib.nifti_1_header_slice_duration_get, _clib.nifti_1_header_slice_duration_set)
    toffset = _swig_property(_clib.nifti_1_header_toffset_get, _clib.nifti_1_header_toffset_set)
    glmax = _swig_property(_clib.nifti_1_header_glmax_get, _clib.nifti_1_header_glmax_set)
    glmin = _swig_property(_clib.nifti_1_header_glmin_get, _clib.nifti_1_header_glmin_set)
    descrip = _swig_property(_clib.nifti_1_header_descrip_get, _clib.nifti_1_header_descrip_set)
    aux_file = _swig_property(_clib.nifti_1_header_aux_file_get, _clib.nifti_1_header_aux_file_set)
    qform_code = _swig_property(_clib.nifti_1_header_qform_code_get, _clib.nifti_1_header_qform_code_set)
    sform_code = _swig_property(_clib.nifti_1_header_sform_code_get, _clib.nifti_1_header_sform_code_set)
    quatern_b = _swig_property(_clib.nifti_1_header_quatern_b_get, _clib.nifti_1_header_quatern_b_set)
    quatern_c = _swig_property(_clib.nifti_1_header_quatern_c_get, _clib.nifti_1_header_quatern_c_set)
    quatern_d = _swig_property(_clib.nifti_1_header_quatern_d_get, _clib.nifti_1_header_quatern_d_set)
    qoffset_x = _swig_property(_clib.nifti_1_header_qoffset_x_get, _clib.nifti_1_header_qoffset_x_set)
    qoffset_y = _swig_property(_clib.nifti_1_header_qoffset_y_get, _clib.nifti_1_header_qoffset_y_set)
    qoffset_z = _swig_property(_clib.nifti_1_header_qoffset_z_get, _clib.nifti_1_header_qoffset_z_set)
    srow_x = _swig_property(_clib.nifti_1_header_srow_x_get, _clib.nifti_1_header_srow_x_set)
    srow_y = _swig_property(_clib.nifti_1_header_srow_y_get, _clib.nifti_1_header_srow_y_set)
    srow_z = _swig_property(_clib.nifti_1_header_srow_z_get, _clib.nifti_1_header_srow_z_set)
    intent_name = _swig_property(_clib.nifti_1_header_intent_name_get, _clib.nifti_1_header_intent_name_set)
    magic = _swig_property(_clib.nifti_1_header_magic_get, _clib.nifti_1_header_magic_set)
    def __init__(self): 
        _clib.nifti_1_header_swiginit(self,_clib.new_nifti_1_header())
    __swig_destroy__ = _clib.delete_nifti_1_header
nifti_1_header_swigregister = _clib.nifti_1_header_swigregister
nifti_1_header_swigregister(nifti_1_header)

class nifti1_extender(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    extension = _swig_property(_clib.nifti1_extender_extension_get, _clib.nifti1_extender_extension_set)
    def __init__(self): 
        _clib.nifti1_extender_swiginit(self,_clib.new_nifti1_extender())
    __swig_destroy__ = _clib.delete_nifti1_extender
nifti1_extender_swigregister = _clib.nifti1_extender_swigregister
nifti1_extender_swigregister(nifti1_extender)

class nifti1_extension(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    esize = _swig_property(_clib.nifti1_extension_esize_get, _clib.nifti1_extension_esize_set)
    ecode = _swig_property(_clib.nifti1_extension_ecode_get, _clib.nifti1_extension_ecode_set)
    edata = _swig_property(_clib.nifti1_extension_edata_get, _clib.nifti1_extension_edata_set)
    def __init__(self): 
        _clib.nifti1_extension_swiginit(self,_clib.new_nifti1_extension())
    __swig_destroy__ = _clib.delete_nifti1_extension
nifti1_extension_swigregister = _clib.nifti1_extension_swigregister
nifti1_extension_swigregister(nifti1_extension)

DT_NONE = _clib.DT_NONE
DT_UNKNOWN = _clib.DT_UNKNOWN
DT_BINARY = _clib.DT_BINARY
DT_UNSIGNED_CHAR = _clib.DT_UNSIGNED_CHAR
DT_SIGNED_SHORT = _clib.DT_SIGNED_SHORT
DT_SIGNED_INT = _clib.DT_SIGNED_INT
DT_FLOAT = _clib.DT_FLOAT
DT_COMPLEX = _clib.DT_COMPLEX
DT_DOUBLE = _clib.DT_DOUBLE
DT_RGB = _clib.DT_RGB
DT_ALL = _clib.DT_ALL
DT_UINT8 = _clib.DT_UINT8
DT_INT16 = _clib.DT_INT16
DT_INT32 = _clib.DT_INT32
DT_FLOAT32 = _clib.DT_FLOAT32
DT_COMPLEX64 = _clib.DT_COMPLEX64
DT_FLOAT64 = _clib.DT_FLOAT64
DT_RGB24 = _clib.DT_RGB24
DT_INT8 = _clib.DT_INT8
DT_UINT16 = _clib.DT_UINT16
DT_UINT32 = _clib.DT_UINT32
DT_INT64 = _clib.DT_INT64
DT_UINT64 = _clib.DT_UINT64
DT_FLOAT128 = _clib.DT_FLOAT128
DT_COMPLEX128 = _clib.DT_COMPLEX128
DT_COMPLEX256 = _clib.DT_COMPLEX256
DT_RGBA32 = _clib.DT_RGBA32
NIFTI_TYPE_UINT8 = _clib.NIFTI_TYPE_UINT8
NIFTI_TYPE_INT16 = _clib.NIFTI_TYPE_INT16
NIFTI_TYPE_INT32 = _clib.NIFTI_TYPE_INT32
NIFTI_TYPE_FLOAT32 = _clib.NIFTI_TYPE_FLOAT32
NIFTI_TYPE_COMPLEX64 = _clib.NIFTI_TYPE_COMPLEX64
NIFTI_TYPE_FLOAT64 = _clib.NIFTI_TYPE_FLOAT64
NIFTI_TYPE_RGB24 = _clib.NIFTI_TYPE_RGB24
NIFTI_TYPE_INT8 = _clib.NIFTI_TYPE_INT8
NIFTI_TYPE_UINT16 = _clib.NIFTI_TYPE_UINT16
NIFTI_TYPE_UINT32 = _clib.NIFTI_TYPE_UINT32
NIFTI_TYPE_INT64 = _clib.NIFTI_TYPE_INT64
NIFTI_TYPE_UINT64 = _clib.NIFTI_TYPE_UINT64
NIFTI_TYPE_FLOAT128 = _clib.NIFTI_TYPE_FLOAT128
NIFTI_TYPE_COMPLEX128 = _clib.NIFTI_TYPE_COMPLEX128
NIFTI_TYPE_COMPLEX256 = _clib.NIFTI_TYPE_COMPLEX256
NIFTI_TYPE_RGBA32 = _clib.NIFTI_TYPE_RGBA32
NIFTI_INTENT_NONE = _clib.NIFTI_INTENT_NONE
NIFTI_INTENT_CORREL = _clib.NIFTI_INTENT_CORREL
NIFTI_INTENT_TTEST = _clib.NIFTI_INTENT_TTEST
NIFTI_INTENT_FTEST = _clib.NIFTI_INTENT_FTEST
NIFTI_INTENT_ZSCORE = _clib.NIFTI_INTENT_ZSCORE
NIFTI_INTENT_CHISQ = _clib.NIFTI_INTENT_CHISQ
NIFTI_INTENT_BETA = _clib.NIFTI_INTENT_BETA
NIFTI_INTENT_BINOM = _clib.NIFTI_INTENT_BINOM
NIFTI_INTENT_GAMMA = _clib.NIFTI_INTENT_GAMMA
NIFTI_INTENT_POISSON = _clib.NIFTI_INTENT_POISSON
NIFTI_INTENT_NORMAL = _clib.NIFTI_INTENT_NORMAL
NIFTI_INTENT_FTEST_NONC = _clib.NIFTI_INTENT_FTEST_NONC
NIFTI_INTENT_CHISQ_NONC = _clib.NIFTI_INTENT_CHISQ_NONC
NIFTI_INTENT_LOGISTIC = _clib.NIFTI_INTENT_LOGISTIC
NIFTI_INTENT_LAPLACE = _clib.NIFTI_INTENT_LAPLACE
NIFTI_INTENT_UNIFORM = _clib.NIFTI_INTENT_UNIFORM
NIFTI_INTENT_TTEST_NONC = _clib.NIFTI_INTENT_TTEST_NONC
NIFTI_INTENT_WEIBULL = _clib.NIFTI_INTENT_WEIBULL
NIFTI_INTENT_CHI = _clib.NIFTI_INTENT_CHI
NIFTI_INTENT_INVGAUSS = _clib.NIFTI_INTENT_INVGAUSS
NIFTI_INTENT_EXTVAL = _clib.NIFTI_INTENT_EXTVAL
NIFTI_INTENT_PVAL = _clib.NIFTI_INTENT_PVAL
NIFTI_INTENT_LOGPVAL = _clib.NIFTI_INTENT_LOGPVAL
NIFTI_INTENT_LOG10PVAL = _clib.NIFTI_INTENT_LOG10PVAL
NIFTI_FIRST_STATCODE = _clib.NIFTI_FIRST_STATCODE
NIFTI_LAST_STATCODE = _clib.NIFTI_LAST_STATCODE
NIFTI_INTENT_ESTIMATE = _clib.NIFTI_INTENT_ESTIMATE
NIFTI_INTENT_LABEL = _clib.NIFTI_INTENT_LABEL
NIFTI_INTENT_NEURONAME = _clib.NIFTI_INTENT_NEURONAME
NIFTI_INTENT_GENMATRIX = _clib.NIFTI_INTENT_GENMATRIX
NIFTI_INTENT_SYMMATRIX = _clib.NIFTI_INTENT_SYMMATRIX
NIFTI_INTENT_DISPVECT = _clib.NIFTI_INTENT_DISPVECT
NIFTI_INTENT_VECTOR = _clib.NIFTI_INTENT_VECTOR
NIFTI_INTENT_POINTSET = _clib.NIFTI_INTENT_POINTSET
NIFTI_INTENT_TRIANGLE = _clib.NIFTI_INTENT_TRIANGLE
NIFTI_INTENT_QUATERNION = _clib.NIFTI_INTENT_QUATERNION
NIFTI_INTENT_DIMLESS = _clib.NIFTI_INTENT_DIMLESS
NIFTI_INTENT_TIME_SERIES = _clib.NIFTI_INTENT_TIME_SERIES
NIFTI_INTENT_NODE_INDEX = _clib.NIFTI_INTENT_NODE_INDEX
NIFTI_INTENT_RGB_VECTOR = _clib.NIFTI_INTENT_RGB_VECTOR
NIFTI_INTENT_RGBA_VECTOR = _clib.NIFTI_INTENT_RGBA_VECTOR
NIFTI_INTENT_SHAPE = _clib.NIFTI_INTENT_SHAPE
NIFTI_XFORM_UNKNOWN = _clib.NIFTI_XFORM_UNKNOWN
NIFTI_XFORM_SCANNER_ANAT = _clib.NIFTI_XFORM_SCANNER_ANAT
NIFTI_XFORM_ALIGNED_ANAT = _clib.NIFTI_XFORM_ALIGNED_ANAT
NIFTI_XFORM_TALAIRACH = _clib.NIFTI_XFORM_TALAIRACH
NIFTI_XFORM_MNI_152 = _clib.NIFTI_XFORM_MNI_152
NIFTI_UNITS_UNKNOWN = _clib.NIFTI_UNITS_UNKNOWN
NIFTI_UNITS_METER = _clib.NIFTI_UNITS_METER
NIFTI_UNITS_MM = _clib.NIFTI_UNITS_MM
NIFTI_UNITS_MICRON = _clib.NIFTI_UNITS_MICRON
NIFTI_UNITS_SEC = _clib.NIFTI_UNITS_SEC
NIFTI_UNITS_MSEC = _clib.NIFTI_UNITS_MSEC
NIFTI_UNITS_USEC = _clib.NIFTI_UNITS_USEC
NIFTI_UNITS_HZ = _clib.NIFTI_UNITS_HZ
NIFTI_UNITS_PPM = _clib.NIFTI_UNITS_PPM
NIFTI_UNITS_RADS = _clib.NIFTI_UNITS_RADS
NIFTI_SLICE_UNKNOWN = _clib.NIFTI_SLICE_UNKNOWN
NIFTI_SLICE_SEQ_INC = _clib.NIFTI_SLICE_SEQ_INC
NIFTI_SLICE_SEQ_DEC = _clib.NIFTI_SLICE_SEQ_DEC
NIFTI_SLICE_ALT_INC = _clib.NIFTI_SLICE_ALT_INC
NIFTI_SLICE_ALT_DEC = _clib.NIFTI_SLICE_ALT_DEC
NIFTI_SLICE_ALT_INC2 = _clib.NIFTI_SLICE_ALT_INC2
NIFTI_SLICE_ALT_DEC2 = _clib.NIFTI_SLICE_ALT_DEC2
class mat44(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    m = _swig_property(_clib.mat44_m_get, _clib.mat44_m_set)
    def __init__(self): 
        _clib.mat44_swiginit(self,_clib.new_mat44())
    __swig_destroy__ = _clib.delete_mat44
mat44_swigregister = _clib.mat44_swigregister
mat44_swigregister(mat44)

class mat33(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    m = _swig_property(_clib.mat33_m_get, _clib.mat33_m_set)
    def __init__(self): 
        _clib.mat33_swiginit(self,_clib.new_mat33())
    __swig_destroy__ = _clib.delete_mat33
mat33_swigregister = _clib.mat33_swigregister
mat33_swigregister(mat33)

a75_transverse_unflipped = _clib.a75_transverse_unflipped
a75_coronal_unflipped = _clib.a75_coronal_unflipped
a75_sagittal_unflipped = _clib.a75_sagittal_unflipped
a75_transverse_flipped = _clib.a75_transverse_flipped
a75_coronal_flipped = _clib.a75_coronal_flipped
a75_sagittal_flipped = _clib.a75_sagittal_flipped
a75_orient_unknown = _clib.a75_orient_unknown
class nifti_image(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    ndim = _swig_property(_clib.nifti_image_ndim_get, _clib.nifti_image_ndim_set)
    nx = _swig_property(_clib.nifti_image_nx_get, _clib.nifti_image_nx_set)
    ny = _swig_property(_clib.nifti_image_ny_get, _clib.nifti_image_ny_set)
    nz = _swig_property(_clib.nifti_image_nz_get, _clib.nifti_image_nz_set)
    nt = _swig_property(_clib.nifti_image_nt_get, _clib.nifti_image_nt_set)
    nu = _swig_property(_clib.nifti_image_nu_get, _clib.nifti_image_nu_set)
    nv = _swig_property(_clib.nifti_image_nv_get, _clib.nifti_image_nv_set)
    nw = _swig_property(_clib.nifti_image_nw_get, _clib.nifti_image_nw_set)
    dim = _swig_property(_clib.nifti_image_dim_get, _clib.nifti_image_dim_set)
    nvox = _swig_property(_clib.nifti_image_nvox_get, _clib.nifti_image_nvox_set)
    nbyper = _swig_property(_clib.nifti_image_nbyper_get, _clib.nifti_image_nbyper_set)
    datatype = _swig_property(_clib.nifti_image_datatype_get, _clib.nifti_image_datatype_set)
    dx = _swig_property(_clib.nifti_image_dx_get, _clib.nifti_image_dx_set)
    dy = _swig_property(_clib.nifti_image_dy_get, _clib.nifti_image_dy_set)
    dz = _swig_property(_clib.nifti_image_dz_get, _clib.nifti_image_dz_set)
    dt = _swig_property(_clib.nifti_image_dt_get, _clib.nifti_image_dt_set)
    du = _swig_property(_clib.nifti_image_du_get, _clib.nifti_image_du_set)
    dv = _swig_property(_clib.nifti_image_dv_get, _clib.nifti_image_dv_set)
    dw = _swig_property(_clib.nifti_image_dw_get, _clib.nifti_image_dw_set)
    pixdim = _swig_property(_clib.nifti_image_pixdim_get, _clib.nifti_image_pixdim_set)
    scl_slope = _swig_property(_clib.nifti_image_scl_slope_get, _clib.nifti_image_scl_slope_set)
    scl_inter = _swig_property(_clib.nifti_image_scl_inter_get, _clib.nifti_image_scl_inter_set)
    cal_min = _swig_property(_clib.nifti_image_cal_min_get, _clib.nifti_image_cal_min_set)
    cal_max = _swig_property(_clib.nifti_image_cal_max_get, _clib.nifti_image_cal_max_set)
    qform_code = _swig_property(_clib.nifti_image_qform_code_get, _clib.nifti_image_qform_code_set)
    sform_code = _swig_property(_clib.nifti_image_sform_code_get, _clib.nifti_image_sform_code_set)
    freq_dim = _swig_property(_clib.nifti_image_freq_dim_get, _clib.nifti_image_freq_dim_set)
    phase_dim = _swig_property(_clib.nifti_image_phase_dim_get, _clib.nifti_image_phase_dim_set)
    slice_dim = _swig_property(_clib.nifti_image_slice_dim_get, _clib.nifti_image_slice_dim_set)
    slice_code = _swig_property(_clib.nifti_image_slice_code_get, _clib.nifti_image_slice_code_set)
    slice_start = _swig_property(_clib.nifti_image_slice_start_get, _clib.nifti_image_slice_start_set)
    slice_end = _swig_property(_clib.nifti_image_slice_end_get, _clib.nifti_image_slice_end_set)
    slice_duration = _swig_property(_clib.nifti_image_slice_duration_get, _clib.nifti_image_slice_duration_set)
    quatern_b = _swig_property(_clib.nifti_image_quatern_b_get, _clib.nifti_image_quatern_b_set)
    quatern_c = _swig_property(_clib.nifti_image_quatern_c_get, _clib.nifti_image_quatern_c_set)
    quatern_d = _swig_property(_clib.nifti_image_quatern_d_get, _clib.nifti_image_quatern_d_set)
    qoffset_x = _swig_property(_clib.nifti_image_qoffset_x_get, _clib.nifti_image_qoffset_x_set)
    qoffset_y = _swig_property(_clib.nifti_image_qoffset_y_get, _clib.nifti_image_qoffset_y_set)
    qoffset_z = _swig_property(_clib.nifti_image_qoffset_z_get, _clib.nifti_image_qoffset_z_set)
    qfac = _swig_property(_clib.nifti_image_qfac_get, _clib.nifti_image_qfac_set)
    qto_xyz = _swig_property(_clib.nifti_image_qto_xyz_get, _clib.nifti_image_qto_xyz_set)
    qto_ijk = _swig_property(_clib.nifti_image_qto_ijk_get, _clib.nifti_image_qto_ijk_set)
    sto_xyz = _swig_property(_clib.nifti_image_sto_xyz_get, _clib.nifti_image_sto_xyz_set)
    sto_ijk = _swig_property(_clib.nifti_image_sto_ijk_get, _clib.nifti_image_sto_ijk_set)
    toffset = _swig_property(_clib.nifti_image_toffset_get, _clib.nifti_image_toffset_set)
    xyz_units = _swig_property(_clib.nifti_image_xyz_units_get, _clib.nifti_image_xyz_units_set)
    time_units = _swig_property(_clib.nifti_image_time_units_get, _clib.nifti_image_time_units_set)
    nifti_type = _swig_property(_clib.nifti_image_nifti_type_get, _clib.nifti_image_nifti_type_set)
    intent_code = _swig_property(_clib.nifti_image_intent_code_get, _clib.nifti_image_intent_code_set)
    intent_p1 = _swig_property(_clib.nifti_image_intent_p1_get, _clib.nifti_image_intent_p1_set)
    intent_p2 = _swig_property(_clib.nifti_image_intent_p2_get, _clib.nifti_image_intent_p2_set)
    intent_p3 = _swig_property(_clib.nifti_image_intent_p3_get, _clib.nifti_image_intent_p3_set)
    intent_name = _swig_property(_clib.nifti_image_intent_name_get, _clib.nifti_image_intent_name_set)
    descrip = _swig_property(_clib.nifti_image_descrip_get, _clib.nifti_image_descrip_set)
    aux_file = _swig_property(_clib.nifti_image_aux_file_get, _clib.nifti_image_aux_file_set)
    fname = _swig_property(_clib.nifti_image_fname_get, _clib.nifti_image_fname_set)
    iname = _swig_property(_clib.nifti_image_iname_get, _clib.nifti_image_iname_set)
    iname_offset = _swig_property(_clib.nifti_image_iname_offset_get, _clib.nifti_image_iname_offset_set)
    swapsize = _swig_property(_clib.nifti_image_swapsize_get, _clib.nifti_image_swapsize_set)
    byteorder = _swig_property(_clib.nifti_image_byteorder_get, _clib.nifti_image_byteorder_set)
    data = _swig_property(_clib.nifti_image_data_get, _clib.nifti_image_data_set)
    num_ext = _swig_property(_clib.nifti_image_num_ext_get, _clib.nifti_image_num_ext_set)
    ext_list = _swig_property(_clib.nifti_image_ext_list_get, _clib.nifti_image_ext_list_set)
    analyze75_orient = _swig_property(_clib.nifti_image_analyze75_orient_get, _clib.nifti_image_analyze75_orient_set)
    def __init__(self): 
        _clib.nifti_image_swiginit(self,_clib.new_nifti_image())
    __swig_destroy__ = _clib.delete_nifti_image
nifti_image_swigregister = _clib.nifti_image_swigregister
nifti_image_swigregister(nifti_image)

class nifti_brick_list(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    nbricks = _swig_property(_clib.nifti_brick_list_nbricks_get, _clib.nifti_brick_list_nbricks_set)
    bsize = _swig_property(_clib.nifti_brick_list_bsize_get, _clib.nifti_brick_list_bsize_set)
    bricks = _swig_property(_clib.nifti_brick_list_bricks_get, _clib.nifti_brick_list_bricks_set)
    def __init__(self): 
        _clib.nifti_brick_list_swiginit(self,_clib.new_nifti_brick_list())
    __swig_destroy__ = _clib.delete_nifti_brick_list
nifti_brick_list_swigregister = _clib.nifti_brick_list_swigregister
nifti_brick_list_swigregister(nifti_brick_list)

class nifti_analyze75(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    sizeof_hdr = _swig_property(_clib.nifti_analyze75_sizeof_hdr_get, _clib.nifti_analyze75_sizeof_hdr_set)
    data_type = _swig_property(_clib.nifti_analyze75_data_type_get, _clib.nifti_analyze75_data_type_set)
    db_name = _swig_property(_clib.nifti_analyze75_db_name_get, _clib.nifti_analyze75_db_name_set)
    extents = _swig_property(_clib.nifti_analyze75_extents_get, _clib.nifti_analyze75_extents_set)
    session_error = _swig_property(_clib.nifti_analyze75_session_error_get, _clib.nifti_analyze75_session_error_set)
    regular = _swig_property(_clib.nifti_analyze75_regular_get, _clib.nifti_analyze75_regular_set)
    hkey_un0 = _swig_property(_clib.nifti_analyze75_hkey_un0_get, _clib.nifti_analyze75_hkey_un0_set)
    dim = _swig_property(_clib.nifti_analyze75_dim_get, _clib.nifti_analyze75_dim_set)
    unused8 = _swig_property(_clib.nifti_analyze75_unused8_get, _clib.nifti_analyze75_unused8_set)
    unused9 = _swig_property(_clib.nifti_analyze75_unused9_get, _clib.nifti_analyze75_unused9_set)
    unused10 = _swig_property(_clib.nifti_analyze75_unused10_get, _clib.nifti_analyze75_unused10_set)
    unused11 = _swig_property(_clib.nifti_analyze75_unused11_get, _clib.nifti_analyze75_unused11_set)
    unused12 = _swig_property(_clib.nifti_analyze75_unused12_get, _clib.nifti_analyze75_unused12_set)
    unused13 = _swig_property(_clib.nifti_analyze75_unused13_get, _clib.nifti_analyze75_unused13_set)
    unused14 = _swig_property(_clib.nifti_analyze75_unused14_get, _clib.nifti_analyze75_unused14_set)
    datatype = _swig_property(_clib.nifti_analyze75_datatype_get, _clib.nifti_analyze75_datatype_set)
    bitpix = _swig_property(_clib.nifti_analyze75_bitpix_get, _clib.nifti_analyze75_bitpix_set)
    dim_un0 = _swig_property(_clib.nifti_analyze75_dim_un0_get, _clib.nifti_analyze75_dim_un0_set)
    pixdim = _swig_property(_clib.nifti_analyze75_pixdim_get, _clib.nifti_analyze75_pixdim_set)
    vox_offset = _swig_property(_clib.nifti_analyze75_vox_offset_get, _clib.nifti_analyze75_vox_offset_set)
    funused1 = _swig_property(_clib.nifti_analyze75_funused1_get, _clib.nifti_analyze75_funused1_set)
    funused2 = _swig_property(_clib.nifti_analyze75_funused2_get, _clib.nifti_analyze75_funused2_set)
    funused3 = _swig_property(_clib.nifti_analyze75_funused3_get, _clib.nifti_analyze75_funused3_set)
    cal_max = _swig_property(_clib.nifti_analyze75_cal_max_get, _clib.nifti_analyze75_cal_max_set)
    cal_min = _swig_property(_clib.nifti_analyze75_cal_min_get, _clib.nifti_analyze75_cal_min_set)
    compressed = _swig_property(_clib.nifti_analyze75_compressed_get, _clib.nifti_analyze75_compressed_set)
    verified = _swig_property(_clib.nifti_analyze75_verified_get, _clib.nifti_analyze75_verified_set)
    glmax = _swig_property(_clib.nifti_analyze75_glmax_get, _clib.nifti_analyze75_glmax_set)
    glmin = _swig_property(_clib.nifti_analyze75_glmin_get, _clib.nifti_analyze75_glmin_set)
    descrip = _swig_property(_clib.nifti_analyze75_descrip_get, _clib.nifti_analyze75_descrip_set)
    aux_file = _swig_property(_clib.nifti_analyze75_aux_file_get, _clib.nifti_analyze75_aux_file_set)
    orient = _swig_property(_clib.nifti_analyze75_orient_get, _clib.nifti_analyze75_orient_set)
    originator = _swig_property(_clib.nifti_analyze75_originator_get, _clib.nifti_analyze75_originator_set)
    generated = _swig_property(_clib.nifti_analyze75_generated_get, _clib.nifti_analyze75_generated_set)
    scannum = _swig_property(_clib.nifti_analyze75_scannum_get, _clib.nifti_analyze75_scannum_set)
    patient_id = _swig_property(_clib.nifti_analyze75_patient_id_get, _clib.nifti_analyze75_patient_id_set)
    exp_date = _swig_property(_clib.nifti_analyze75_exp_date_get, _clib.nifti_analyze75_exp_date_set)
    exp_time = _swig_property(_clib.nifti_analyze75_exp_time_get, _clib.nifti_analyze75_exp_time_set)
    hist_un0 = _swig_property(_clib.nifti_analyze75_hist_un0_get, _clib.nifti_analyze75_hist_un0_set)
    views = _swig_property(_clib.nifti_analyze75_views_get, _clib.nifti_analyze75_views_set)
    vols_added = _swig_property(_clib.nifti_analyze75_vols_added_get, _clib.nifti_analyze75_vols_added_set)
    start_field = _swig_property(_clib.nifti_analyze75_start_field_get, _clib.nifti_analyze75_start_field_set)
    field_skip = _swig_property(_clib.nifti_analyze75_field_skip_get, _clib.nifti_analyze75_field_skip_set)
    omax = _swig_property(_clib.nifti_analyze75_omax_get, _clib.nifti_analyze75_omax_set)
    omin = _swig_property(_clib.nifti_analyze75_omin_get, _clib.nifti_analyze75_omin_set)
    smax = _swig_property(_clib.nifti_analyze75_smax_get, _clib.nifti_analyze75_smax_set)
    smin = _swig_property(_clib.nifti_analyze75_smin_get, _clib.nifti_analyze75_smin_set)
    def __init__(self): 
        _clib.nifti_analyze75_swiginit(self,_clib.new_nifti_analyze75())
    __swig_destroy__ = _clib.delete_nifti_analyze75
nifti_analyze75_swigregister = _clib.nifti_analyze75_swigregister
nifti_analyze75_swigregister(nifti_analyze75)


def nifti_datatype_string(*args):
  return _clib.nifti_datatype_string(*args)
nifti_datatype_string = _clib.nifti_datatype_string

def nifti_units_string(*args):
  return _clib.nifti_units_string(*args)
nifti_units_string = _clib.nifti_units_string

def nifti_intent_string(*args):
  return _clib.nifti_intent_string(*args)
nifti_intent_string = _clib.nifti_intent_string

def nifti_xform_string(*args):
  return _clib.nifti_xform_string(*args)
nifti_xform_string = _clib.nifti_xform_string

def nifti_slice_string(*args):
  return _clib.nifti_slice_string(*args)
nifti_slice_string = _clib.nifti_slice_string

def nifti_orientation_string(*args):
  return _clib.nifti_orientation_string(*args)
nifti_orientation_string = _clib.nifti_orientation_string

def nifti_is_inttype(*args):
  return _clib.nifti_is_inttype(*args)
nifti_is_inttype = _clib.nifti_is_inttype

def nifti_mat44_inverse(*args):
  return _clib.nifti_mat44_inverse(*args)
nifti_mat44_inverse = _clib.nifti_mat44_inverse

def nifti_mat33_inverse(*args):
  return _clib.nifti_mat33_inverse(*args)
nifti_mat33_inverse = _clib.nifti_mat33_inverse

def nifti_mat33_polar(*args):
  return _clib.nifti_mat33_polar(*args)
nifti_mat33_polar = _clib.nifti_mat33_polar

def nifti_mat33_rownorm(*args):
  return _clib.nifti_mat33_rownorm(*args)
nifti_mat33_rownorm = _clib.nifti_mat33_rownorm

def nifti_mat33_colnorm(*args):
  return _clib.nifti_mat33_colnorm(*args)
nifti_mat33_colnorm = _clib.nifti_mat33_colnorm

def nifti_mat33_determ(*args):
  return _clib.nifti_mat33_determ(*args)
nifti_mat33_determ = _clib.nifti_mat33_determ

def nifti_mat33_mul(*args):
  return _clib.nifti_mat33_mul(*args)
nifti_mat33_mul = _clib.nifti_mat33_mul

def nifti_swap_2bytes(*args):
  return _clib.nifti_swap_2bytes(*args)
nifti_swap_2bytes = _clib.nifti_swap_2bytes

def nifti_swap_4bytes(*args):
  return _clib.nifti_swap_4bytes(*args)
nifti_swap_4bytes = _clib.nifti_swap_4bytes

def nifti_swap_8bytes(*args):
  return _clib.nifti_swap_8bytes(*args)
nifti_swap_8bytes = _clib.nifti_swap_8bytes

def nifti_swap_16bytes(*args):
  return _clib.nifti_swap_16bytes(*args)
nifti_swap_16bytes = _clib.nifti_swap_16bytes

def nifti_swap_Nbytes(*args):
  return _clib.nifti_swap_Nbytes(*args)
nifti_swap_Nbytes = _clib.nifti_swap_Nbytes

def nifti_datatype_is_valid(*args):
  return _clib.nifti_datatype_is_valid(*args)
nifti_datatype_is_valid = _clib.nifti_datatype_is_valid

def nifti_datatype_from_string(*args):
  return _clib.nifti_datatype_from_string(*args)
nifti_datatype_from_string = _clib.nifti_datatype_from_string

def nifti_datatype_to_string(*args):
  return _clib.nifti_datatype_to_string(*args)
nifti_datatype_to_string = _clib.nifti_datatype_to_string

def nifti_get_filesize(*args):
  return _clib.nifti_get_filesize(*args)
nifti_get_filesize = _clib.nifti_get_filesize

def swap_nifti_header(*args):
  return _clib.swap_nifti_header(*args)
swap_nifti_header = _clib.swap_nifti_header

def old_swap_nifti_header(*args):
  return _clib.old_swap_nifti_header(*args)
old_swap_nifti_header = _clib.old_swap_nifti_header

def nifti_swap_as_analyze(*args):
  return _clib.nifti_swap_as_analyze(*args)
nifti_swap_as_analyze = _clib.nifti_swap_as_analyze

def nifti_image_read_bricks(*args):
  return _clib.nifti_image_read_bricks(*args)
nifti_image_read_bricks = _clib.nifti_image_read_bricks

def nifti_image_load_bricks(*args):
  return _clib.nifti_image_load_bricks(*args)
nifti_image_load_bricks = _clib.nifti_image_load_bricks

def nifti_free_NBL(*args):
  return _clib.nifti_free_NBL(*args)
nifti_free_NBL = _clib.nifti_free_NBL

def nifti_image_read(*args):
  return _clib.nifti_image_read(*args)
nifti_image_read = _clib.nifti_image_read

def nifti_image_load(*args):
  return _clib.nifti_image_load(*args)
nifti_image_load = _clib.nifti_image_load

def nifti_image_unload(*args):
  return _clib.nifti_image_unload(*args)
nifti_image_unload = _clib.nifti_image_unload

def nifti_image_free(*args):
  return _clib.nifti_image_free(*args)
nifti_image_free = _clib.nifti_image_free

def nifti_read_collapsed_image(*args):
  return _clib.nifti_read_collapsed_image(*args)
nifti_read_collapsed_image = _clib.nifti_read_collapsed_image

def nifti_read_subregion_image(*args):
  return _clib.nifti_read_subregion_image(*args)
nifti_read_subregion_image = _clib.nifti_read_subregion_image

def nifti_image_write(*args):
  return _clib.nifti_image_write(*args)
nifti_image_write = _clib.nifti_image_write

def nifti_image_write_bricks(*args):
  return _clib.nifti_image_write_bricks(*args)
nifti_image_write_bricks = _clib.nifti_image_write_bricks

def nifti_image_infodump(*args):
  return _clib.nifti_image_infodump(*args)
nifti_image_infodump = _clib.nifti_image_infodump

def nifti_disp_lib_hist():
  return _clib.nifti_disp_lib_hist()
nifti_disp_lib_hist = _clib.nifti_disp_lib_hist

def nifti_disp_lib_version():
  return _clib.nifti_disp_lib_version()
nifti_disp_lib_version = _clib.nifti_disp_lib_version

def nifti_disp_matrix_orient(*args):
  return _clib.nifti_disp_matrix_orient(*args)
nifti_disp_matrix_orient = _clib.nifti_disp_matrix_orient

def nifti_disp_type_list(*args):
  return _clib.nifti_disp_type_list(*args)
nifti_disp_type_list = _clib.nifti_disp_type_list

def nifti_image_to_ascii(*args):
  return _clib.nifti_image_to_ascii(*args)
nifti_image_to_ascii = _clib.nifti_image_to_ascii

def nifti_image_from_ascii(*args):
  return _clib.nifti_image_from_ascii(*args)
nifti_image_from_ascii = _clib.nifti_image_from_ascii

def nifti_get_volsize(*args):
  return _clib.nifti_get_volsize(*args)
nifti_get_volsize = _clib.nifti_get_volsize

def nifti_set_filenames(*args):
  return _clib.nifti_set_filenames(*args)
nifti_set_filenames = _clib.nifti_set_filenames

def nifti_makehdrname(*args):
  return _clib.nifti_makehdrname(*args)
nifti_makehdrname = _clib.nifti_makehdrname

def nifti_makeimgname(*args):
  return _clib.nifti_makeimgname(*args)
nifti_makeimgname = _clib.nifti_makeimgname

def is_nifti_file(*args):
  return _clib.is_nifti_file(*args)
is_nifti_file = _clib.is_nifti_file

def nifti_find_file_extension(*args):
  return _clib.nifti_find_file_extension(*args)
nifti_find_file_extension = _clib.nifti_find_file_extension

def nifti_is_complete_filename(*args):
  return _clib.nifti_is_complete_filename(*args)
nifti_is_complete_filename = _clib.nifti_is_complete_filename

def nifti_validfilename(*args):
  return _clib.nifti_validfilename(*args)
nifti_validfilename = _clib.nifti_validfilename

def disp_nifti_1_header(*args):
  return _clib.disp_nifti_1_header(*args)
disp_nifti_1_header = _clib.disp_nifti_1_header

def nifti_set_debug_level(*args):
  return _clib.nifti_set_debug_level(*args)
nifti_set_debug_level = _clib.nifti_set_debug_level

def nifti_set_skip_blank_ext(*args):
  return _clib.nifti_set_skip_blank_ext(*args)
nifti_set_skip_blank_ext = _clib.nifti_set_skip_blank_ext

def valid_nifti_brick_list(*args):
  return _clib.valid_nifti_brick_list(*args)
valid_nifti_brick_list = _clib.valid_nifti_brick_list

def nifti_image_open(*args):
  return _clib.nifti_image_open(*args)
nifti_image_open = _clib.nifti_image_open

def nifti_image_write_hdr_img(*args):
  return _clib.nifti_image_write_hdr_img(*args)
nifti_image_write_hdr_img = _clib.nifti_image_write_hdr_img

def nifti_image_write_hdr_img2(*args):
  return _clib.nifti_image_write_hdr_img2(*args)
nifti_image_write_hdr_img2 = _clib.nifti_image_write_hdr_img2

def nifti_read_buffer(*args):
  return _clib.nifti_read_buffer(*args)
nifti_read_buffer = _clib.nifti_read_buffer

def nifti_write_all_data(*args):
  return _clib.nifti_write_all_data(*args)
nifti_write_all_data = _clib.nifti_write_all_data

def nifti_write_buffer(*args):
  return _clib.nifti_write_buffer(*args)
nifti_write_buffer = _clib.nifti_write_buffer

def nifti_read_ascii_image(*args):
  return _clib.nifti_read_ascii_image(*args)
nifti_read_ascii_image = _clib.nifti_read_ascii_image

def nifti_write_ascii_image(*args):
  return _clib.nifti_write_ascii_image(*args)
nifti_write_ascii_image = _clib.nifti_write_ascii_image

def nifti_datatype_sizes(*args):
  return _clib.nifti_datatype_sizes(*args)
nifti_datatype_sizes = _clib.nifti_datatype_sizes

def nifti_quatern_to_mat44(*args):
  return _clib.nifti_quatern_to_mat44(*args)
nifti_quatern_to_mat44 = _clib.nifti_quatern_to_mat44

def nifti_make_orthog_mat44(*args):
  return _clib.nifti_make_orthog_mat44(*args)
nifti_make_orthog_mat44 = _clib.nifti_make_orthog_mat44

def nifti_short_order():
  return _clib.nifti_short_order()
nifti_short_order = _clib.nifti_short_order
NIFTI_L2R = _clib.NIFTI_L2R
NIFTI_R2L = _clib.NIFTI_R2L
NIFTI_P2A = _clib.NIFTI_P2A
NIFTI_A2P = _clib.NIFTI_A2P
NIFTI_I2S = _clib.NIFTI_I2S
NIFTI_S2I = _clib.NIFTI_S2I

def nifti_findhdrname(*args):
  return _clib.nifti_findhdrname(*args)
nifti_findhdrname = _clib.nifti_findhdrname

def nifti_findimgname(*args):
  return _clib.nifti_findimgname(*args)
nifti_findimgname = _clib.nifti_findimgname

def nifti_is_gzfile(*args):
  return _clib.nifti_is_gzfile(*args)
nifti_is_gzfile = _clib.nifti_is_gzfile

def nifti_makebasename(*args):
  return _clib.nifti_makebasename(*args)
nifti_makebasename = _clib.nifti_makebasename

def nifti_convert_nim2nhdr(*args):
  return _clib.nifti_convert_nim2nhdr(*args)
nifti_convert_nim2nhdr = _clib.nifti_convert_nim2nhdr

def nifti_make_new_header(*args):
  return _clib.nifti_make_new_header(*args)
nifti_make_new_header = _clib.nifti_make_new_header

def nifti_read_header(*args):
  return _clib.nifti_read_header(*args)
nifti_read_header = _clib.nifti_read_header

def nifti_copy_nim_info(*args):
  return _clib.nifti_copy_nim_info(*args)
nifti_copy_nim_info = _clib.nifti_copy_nim_info

def nifti_make_new_nim(*args):
  return _clib.nifti_make_new_nim(*args)
nifti_make_new_nim = _clib.nifti_make_new_nim

def nifti_simple_init_nim():
  return _clib.nifti_simple_init_nim()
nifti_simple_init_nim = _clib.nifti_simple_init_nim

def nifti_convert_nhdr2nim(*args):
  return _clib.nifti_convert_nhdr2nim(*args)
nifti_convert_nhdr2nim = _clib.nifti_convert_nhdr2nim

def nifti_hdr_looks_good(*args):
  return _clib.nifti_hdr_looks_good(*args)
nifti_hdr_looks_good = _clib.nifti_hdr_looks_good

def nifti_is_valid_datatype(*args):
  return _clib.nifti_is_valid_datatype(*args)
nifti_is_valid_datatype = _clib.nifti_is_valid_datatype

def nifti_is_valid_ecode(*args):
  return _clib.nifti_is_valid_ecode(*args)
nifti_is_valid_ecode = _clib.nifti_is_valid_ecode

def nifti_nim_is_valid(*args):
  return _clib.nifti_nim_is_valid(*args)
nifti_nim_is_valid = _clib.nifti_nim_is_valid

def nifti_nim_has_valid_dims(*args):
  return _clib.nifti_nim_has_valid_dims(*args)
nifti_nim_has_valid_dims = _clib.nifti_nim_has_valid_dims

def is_valid_nifti_type(*args):
  return _clib.is_valid_nifti_type(*args)
is_valid_nifti_type = _clib.is_valid_nifti_type

def nifti_test_datatype_sizes(*args):
  return _clib.nifti_test_datatype_sizes(*args)
nifti_test_datatype_sizes = _clib.nifti_test_datatype_sizes

def nifti_type_and_names_match(*args):
  return _clib.nifti_type_and_names_match(*args)
nifti_type_and_names_match = _clib.nifti_type_and_names_match

def nifti_update_dims_from_array(*args):
  return _clib.nifti_update_dims_from_array(*args)
nifti_update_dims_from_array = _clib.nifti_update_dims_from_array

def nifti_set_iname_offset(*args):
  return _clib.nifti_set_iname_offset(*args)
nifti_set_iname_offset = _clib.nifti_set_iname_offset

def nifti_set_type_from_names(*args):
  return _clib.nifti_set_type_from_names(*args)
nifti_set_type_from_names = _clib.nifti_set_type_from_names

def nifti_add_extension(*args):
  return _clib.nifti_add_extension(*args)
nifti_add_extension = _clib.nifti_add_extension

def nifti_compiled_with_zlib():
  return _clib.nifti_compiled_with_zlib()
nifti_compiled_with_zlib = _clib.nifti_compiled_with_zlib

def nifti_copy_extensions(*args):
  return _clib.nifti_copy_extensions(*args)
nifti_copy_extensions = _clib.nifti_copy_extensions

def nifti_free_extensions(*args):
  return _clib.nifti_free_extensions(*args)
nifti_free_extensions = _clib.nifti_free_extensions

def nifti_get_intlist(*args):
  return _clib.nifti_get_intlist(*args)
nifti_get_intlist = _clib.nifti_get_intlist

def nifti_strdup(*args):
  return _clib.nifti_strdup(*args)
nifti_strdup = _clib.nifti_strdup

def valid_nifti_extensions(*args):
  return _clib.valid_nifti_extensions(*args)
valid_nifti_extensions = _clib.valid_nifti_extensions
NIFTI_ECODE_IGNORE = _clib.NIFTI_ECODE_IGNORE
NIFTI_ECODE_DICOM = _clib.NIFTI_ECODE_DICOM
NIFTI_ECODE_AFNI = _clib.NIFTI_ECODE_AFNI
NIFTI_ECODE_COMMENT = _clib.NIFTI_ECODE_COMMENT
NIFTI_ECODE_XCEDE = _clib.NIFTI_ECODE_XCEDE
NIFTI_ECODE_JIMDIMINFO = _clib.NIFTI_ECODE_JIMDIMINFO
NIFTI_ECODE_WORKFLOW_FWDS = _clib.NIFTI_ECODE_WORKFLOW_FWDS
NIFTI_ECODE_FREESURFER = _clib.NIFTI_ECODE_FREESURFER
NIFTI_ECODE_PYPICKLE = _clib.NIFTI_ECODE_PYPICKLE
NIFTI_MAX_ECODE = _clib.NIFTI_MAX_ECODE
NIFTI_FTYPE_ANALYZE = _clib.NIFTI_FTYPE_ANALYZE
NIFTI_FTYPE_NIFTI1_1 = _clib.NIFTI_FTYPE_NIFTI1_1
NIFTI_FTYPE_NIFTI1_2 = _clib.NIFTI_FTYPE_NIFTI1_2
NIFTI_FTYPE_ASCII = _clib.NIFTI_FTYPE_ASCII
NIFTI_MAX_FTYPE = _clib.NIFTI_MAX_FTYPE

def wrapImageDataWithArray(*args):
  return _clib.wrapImageDataWithArray(*args)
wrapImageDataWithArray = _clib.wrapImageDataWithArray

def detachDataFromImage(*args):
  return _clib.detachDataFromImage(*args)
detachDataFromImage = _clib.detachDataFromImage

def allocateImageMemory(*args):
  return _clib.allocateImageMemory(*args)
allocateImageMemory = _clib.allocateImageMemory

def mat442array(*args):
  return _clib.mat442array(*args)
mat442array = _clib.mat442array

def set_mat44(*args):
  return _clib.set_mat44(*args)
set_mat44 = _clib.set_mat44

def xyzt2space(*args):
  return _clib.xyzt2space(*args)
xyzt2space = _clib.xyzt2space

def xyzt2time(*args):
  return _clib.xyzt2time(*args)
xyzt2time = _clib.xyzt2time

def spacetime2xyzt(*args):
  return _clib.spacetime2xyzt(*args)
spacetime2xyzt = _clib.spacetime2xyzt

def new_shortp():
  return _clib.new_shortp()
new_shortp = _clib.new_shortp

def copy_shortp(*args):
  return _clib.copy_shortp(*args)
copy_shortp = _clib.copy_shortp

def delete_shortp(*args):
  return _clib.delete_shortp(*args)
delete_shortp = _clib.delete_shortp

def shortp_assign(*args):
  return _clib.shortp_assign(*args)
shortp_assign = _clib.shortp_assign

def shortp_value(*args):
  return _clib.shortp_value(*args)
shortp_value = _clib.shortp_value

def new_intp():
  return _clib.new_intp()
new_intp = _clib.new_intp

def copy_intp(*args):
  return _clib.copy_intp(*args)
copy_intp = _clib.copy_intp

def delete_intp(*args):
  return _clib.delete_intp(*args)
delete_intp = _clib.delete_intp

def intp_assign(*args):
  return _clib.intp_assign(*args)
intp_assign = _clib.intp_assign

def intp_value(*args):
  return _clib.intp_value(*args)
intp_value = _clib.intp_value

def new_uintp():
  return _clib.new_uintp()
new_uintp = _clib.new_uintp

def copy_uintp(*args):
  return _clib.copy_uintp(*args)
copy_uintp = _clib.copy_uintp

def delete_uintp(*args):
  return _clib.delete_uintp(*args)
delete_uintp = _clib.delete_uintp

def uintp_assign(*args):
  return _clib.uintp_assign(*args)
uintp_assign = _clib.uintp_assign

def uintp_value(*args):
  return _clib.uintp_value(*args)
uintp_value = _clib.uintp_value

def new_floatp():
  return _clib.new_floatp()
new_floatp = _clib.new_floatp

def copy_floatp(*args):
  return _clib.copy_floatp(*args)
copy_floatp = _clib.copy_floatp

def delete_floatp(*args):
  return _clib.delete_floatp(*args)
delete_floatp = _clib.delete_floatp

def floatp_assign(*args):
  return _clib.floatp_assign(*args)
floatp_assign = _clib.floatp_assign

def floatp_value(*args):
  return _clib.floatp_value(*args)
floatp_value = _clib.floatp_value

def new_doublep():
  return _clib.new_doublep()
new_doublep = _clib.new_doublep

def copy_doublep(*args):
  return _clib.copy_doublep(*args)
copy_doublep = _clib.copy_doublep

def delete_doublep(*args):
  return _clib.delete_doublep(*args)
delete_doublep = _clib.delete_doublep

def doublep_assign(*args):
  return _clib.doublep_assign(*args)
doublep_assign = _clib.doublep_assign

def doublep_value(*args):
  return _clib.doublep_value(*args)
doublep_value = _clib.doublep_value

def new_charp():
  return _clib.new_charp()
new_charp = _clib.new_charp

def copy_charp(*args):
  return _clib.copy_charp(*args)
copy_charp = _clib.copy_charp

def delete_charp(*args):
  return _clib.delete_charp(*args)
delete_charp = _clib.delete_charp

def charp_assign(*args):
  return _clib.charp_assign(*args)
charp_assign = _clib.charp_assign

def charp_value(*args):
  return _clib.charp_value(*args)
charp_value = _clib.charp_value
class shortArray(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _clib.shortArray_swiginit(self,_clib.new_shortArray(*args))
    __swig_destroy__ = _clib.delete_shortArray
    frompointer = staticmethod(_clib.shortArray_frompointer)
shortArray.__getitem__ = new_instancemethod(_clib.shortArray___getitem__,None,shortArray)
shortArray.__setitem__ = new_instancemethod(_clib.shortArray___setitem__,None,shortArray)
shortArray.cast = new_instancemethod(_clib.shortArray_cast,None,shortArray)
shortArray_swigregister = _clib.shortArray_swigregister
shortArray_swigregister(shortArray)

def shortArray_frompointer(*args):
  return _clib.shortArray_frompointer(*args)
shortArray_frompointer = _clib.shortArray_frompointer

class intArray(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _clib.intArray_swiginit(self,_clib.new_intArray(*args))
    __swig_destroy__ = _clib.delete_intArray
    frompointer = staticmethod(_clib.intArray_frompointer)
intArray.__getitem__ = new_instancemethod(_clib.intArray___getitem__,None,intArray)
intArray.__setitem__ = new_instancemethod(_clib.intArray___setitem__,None,intArray)
intArray.cast = new_instancemethod(_clib.intArray_cast,None,intArray)
intArray_swigregister = _clib.intArray_swigregister
intArray_swigregister(intArray)

def intArray_frompointer(*args):
  return _clib.intArray_frompointer(*args)
intArray_frompointer = _clib.intArray_frompointer

class uintArray(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _clib.uintArray_swiginit(self,_clib.new_uintArray(*args))
    __swig_destroy__ = _clib.delete_uintArray
    frompointer = staticmethod(_clib.uintArray_frompointer)
uintArray.__getitem__ = new_instancemethod(_clib.uintArray___getitem__,None,uintArray)
uintArray.__setitem__ = new_instancemethod(_clib.uintArray___setitem__,None,uintArray)
uintArray.cast = new_instancemethod(_clib.uintArray_cast,None,uintArray)
uintArray_swigregister = _clib.uintArray_swigregister
uintArray_swigregister(uintArray)

def uintArray_frompointer(*args):
  return _clib.uintArray_frompointer(*args)
uintArray_frompointer = _clib.uintArray_frompointer

class floatArray(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _clib.floatArray_swiginit(self,_clib.new_floatArray(*args))
    __swig_destroy__ = _clib.delete_floatArray
    frompointer = staticmethod(_clib.floatArray_frompointer)
floatArray.__getitem__ = new_instancemethod(_clib.floatArray___getitem__,None,floatArray)
floatArray.__setitem__ = new_instancemethod(_clib.floatArray___setitem__,None,floatArray)
floatArray.cast = new_instancemethod(_clib.floatArray_cast,None,floatArray)
floatArray_swigregister = _clib.floatArray_swigregister
floatArray_swigregister(floatArray)

def floatArray_frompointer(*args):
  return _clib.floatArray_frompointer(*args)
floatArray_frompointer = _clib.floatArray_frompointer

class doubleArray(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _clib.doubleArray_swiginit(self,_clib.new_doubleArray(*args))
    __swig_destroy__ = _clib.delete_doubleArray
    frompointer = staticmethod(_clib.doubleArray_frompointer)
doubleArray.__getitem__ = new_instancemethod(_clib.doubleArray___getitem__,None,doubleArray)
doubleArray.__setitem__ = new_instancemethod(_clib.doubleArray___setitem__,None,doubleArray)
doubleArray.cast = new_instancemethod(_clib.doubleArray_cast,None,doubleArray)
doubleArray_swigregister = _clib.doubleArray_swigregister
doubleArray_swigregister(doubleArray)

def doubleArray_frompointer(*args):
  return _clib.doubleArray_frompointer(*args)
doubleArray_frompointer = _clib.doubleArray_frompointer

class extensionArray(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _clib.extensionArray_swiginit(self,_clib.new_extensionArray(*args))
    __swig_destroy__ = _clib.delete_extensionArray
    frompointer = staticmethod(_clib.extensionArray_frompointer)
extensionArray.__getitem__ = new_instancemethod(_clib.extensionArray___getitem__,None,extensionArray)
extensionArray.__setitem__ = new_instancemethod(_clib.extensionArray___setitem__,None,extensionArray)
extensionArray.cast = new_instancemethod(_clib.extensionArray_cast,None,extensionArray)
extensionArray_swigregister = _clib.extensionArray_swigregister
extensionArray_swigregister(extensionArray)

def extensionArray_frompointer(*args):
  return _clib.extensionArray_frompointer(*args)
extensionArray_frompointer = _clib.extensionArray_frompointer



